<?php
		
	/**
	 * @file
	 * Install file for the Judgment Content Type module
	 */
	
	function legislationtype_install() {
		node_types_rebuild();
		$types = node_type_get_types();	
		
		add_custom_fields_legislationtype();
	
		$country_code = strtolower(variable_get('site_default_country'));	
		
		variable_set('pathauto_node_legislationtype_pattern', 'addlegislationtype');

		  // Don't display date and author information for "Judgments" nodes by default.
		variable_set('node_submitted_legislationtype', FALSE);
		variable_set('node_options_legislationtype', array('status'));
		variable_set('comment_legislationtype', 'COMMENT_NODE_HIDDEN'); 
		
	}// End function install function

	
	//function will read the array from and create the fields and instances
	function add_custom_fields_legislationtype() {
	
		$t = get_t();		

		$field = array(
	      'field_name' => 'field_legname',
	      'label' => $t('Enter Title of Legislation'),
	      'cardinality' => 1,
	      'type' => 'text',      
	  	);
	  	field_create_field($field);

	  	$instance = array(
		    'field_name'  => 'field_legname',
		    'entity_type' => 'node',             
		    'bundle'      => 'legislationtype', 
		    'label'       => $t('Legislation Type'),
		    'required'    => FALSE,                    
		    'widget'      => array(
		      'type'     => 'hidden',
		      'settings' => array(
		        'display_label' => 1, 
		        'max_length' => '',                    
		      ),               
		    ),
		);
	  	field_create_instance($instance); 


	  	variable_set('pathauto_node_legislationtype_pattern', '[node:field_legname]');

	  	variable_set('node_submitted_legislationtype', FALSE);
	  	variable_set('node_options_legislationtype', array('status'));
	  	variable_set('comment_legislationtype', 'COMMENT_NODE_HIDDEN');	
	
	}

		
	function legislationtype_uninstall() {
		// gather all the content while the module was enabled
		$sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
		$result = db_query($sql, array(':type' => 'legislationtype'));
		$nids = array();
		foreach ($result as $row) {
			$nids[] = $row->nid;
		}
		  
		// delete all the nodes at once
		node_delete_multiple($nids);
		  
		// delete any remaining field instances attached to this content type
		$instances = field_info_instances('node', 'legislationtype');
		foreach ($instances as $instance_name => $instance) {
			field_delete_instance($instance);
		}
		  
		// delete our content type
		node_type_delete('legislationtype');
		  
		// purge all field information
		field_purge_batch(1000);
	}
?>


