<?php
	
	
	/**
	 * @file
	 * Install file for the Judgment Content Type module
	 */
		
	
	function judgment_install() {
		node_types_rebuild();
		$types = node_type_get_types();	
		
		add_custom_fields();
		
		// add the body field to the node type
		node_add_body_field($types['judgment']);
		// load the instance definition for our content type's body
		$body_instance = field_info_instance('node', 'body', 'judgment');
		// configure the body field
		$body_instance['type'] = 'text_summary_or_trimmed';
		$body_instance['label'] = 'Judgment Description';
		$body_instance['display'] = array(
			'default' => array(
				'label' => 'above', 
				'type' => 'text_default',
				//'weight' => 0,
			),
			'teaser' => array(
				'label' => 'hidden', 
				'type' => 'text_summary_or_trimmed',
				//'weight' => 0,
		),
		);
		$body_instance['widget']['weight'] = 0;
		  


		$country_code = strtolower(variable_get('site_default_country'));	
		  //Setting URI structure for judgment content type
		  //variable_set('pathauto_node_judgment_pattern', 'judgment/[node:title]');
		  //variable_set('pathauto_node_judgment_pattern', '[node:field_countrycode]/judgment/[node:field_issuingcourt]/[node:field-jdate:custom:Y]/[node:field_jno]');
		variable_set('pathauto_node_judgment_pattern', $country_code.'/judgment/[node:field_issuingcourt_select]/[node:field-jdate:custom:Y]/[node:field_jno]'.'.html');

		//variable_set('auto_nodetitle_node_judgment_pattern','[node:field_casename]'.'('.'[node:field_casenumber]'.')');
		
		  // Don't display date and author information for "Judgments" nodes by default.
		variable_set('node_submitted_judgment', FALSE);
		variable_set('node_options_judgment', array('status'));
		variable_set('comment_judgment', 'COMMENT_NODE_HIDDEN'); 
		
	}// End function install function

	
	//function will read the array from and create the fields and instances
	function add_custom_fields() {
		$t = get_t();
		$field = array(
			'field_name' => 'field_casename',
			'label' => $t('Case name'),
			'cardinality' => 1,
			'type' => 'text',
			'settings' => array(
				'max_length' => 1000,
			),
		);
		field_create_field($field);
		
		$instance = array(
			'field_name'  => 'field_casename',
			'entity_type' => 'node',             
			'bundle'      => 'judgment', 
			'label'       => $t('Case name'),
			'required'    => false,                       
			'display'     => array(
				'default' => array(
					'type' => 'text',                       
				),
			),
			'widget'      => array(
				'type'     => 'text',              
				'settings' => array(
					'display_label' => 1,                     
				),
			),
		);
		field_create_instance($instance);
		
		//Create Case number field
	  $field = array(
		  'field_name' => 'field_casenumber',
		  'label' => $t('Case number'),
		  'cardinality' => 1,
		  'type' => 'text',
		  'settings' => array(
			'max_length' => 1000,
		  ),
	  );
	  field_create_field($field);

	  $instance = array(
	  'field_name'  => 'field_casenumber',
	  'entity_type' => 'node',             
	  'bundle'      => 'judgment', 
	  'label'       => $t('Case number'),
	  'required'    => false,                       
	  'display'     => array(
		'default' => array(
		  'type' => 'text',                       
		),
	  ),
	  'widget'      => array(
		'type'     => 'text',              
		'settings' => array(
		  'display_label' => 1,                     
		),
		),
	  
	  );
	  field_create_instance($instance);

		//Create Judgment number field
	  $field = array(
		  'field_name' => 'field_jno',
		  'label' => $t('Judgment Number'),
		  'cardinality' => 1,
		  'type' => 'text',     
	  );
	  field_create_field($field);

	  $instance = array(
	  'field_name'  => 'field_jno',
	  'entity_type' => 'node',             
	  'bundle'      => 'judgment', 
	  'label'       => $t('Judgment Number'),
	  //'required'    => true,                       
	  'type' => 'number_decimal',                   
	  'widget'      => array(
		'type'     => 'number_decimal',              
		'settings' => array(
		  'scale' => 0,                     
		),
		),
	  );
	  field_create_instance($instance);
	 

	$field = array(
		'field_name' => 'field_issuingcourt_select',
		'label' => t('Select an option from the list'),
		'type' => 'list_text',
		'cardinality' => '1', // change this to -1 to enable ctrl+select
		'foreign keys' => array(),
		'indexes' => array(
		  'value' => array(
			0 => 'value',
		  ),
		),
		'module' => 'list',
		'settings' => array(
		  'allowed_values_function' => '_judgment_options_list',
		),
	);	
	field_create_field($field);

	$help = $t('Select the court for this judgment');
	$instance = array(
		'field_name' => 'field_issuingcourt_select',
		'label' => t('Court Name'),
		'entity_type' => 'node',             
		'bundle'      => 'judgment',
		'description' => t('Select Court.'),
		'default_value' => NULL,	// add a default value here that matches your key => index values
		'display' => array(
		  'default' => array(
			'label' => 'above',
			'module' => 'list',
			'settings' => array(),
			'type' => 'list_default',
		  ),
		  'teaser' => array(
			'label' => 'above',
			'settings' => array(),
			'type' => 'hidden',
			'weight' => 3,
		  ),
		),
		'required' => 1,
		'settings' => array(
		  'user_register_form' => FALSE,
		),
		'widget' => array(
		  'active' => 1,
		  'module' => 'options',
		  'settings' => array(),
		  'type' => 'options_select',
		  
		),
	);
	field_create_instance($instance); 
	 
			//Create Media Neutral Citation field
	$field = array(
		'field_name' => 'field_mnc',
		'label' => $t('Media Neutral Citation'),
		'cardinality' => 1,
		'type' => 'text',
		'settings' => array(
		'max_length' => 1000,
		),
	);
	field_create_field($field);

	$instance = array(
		'field_name'  => 'field_mnc',
		'entity_type' => 'node',             
		'bundle'      => 'judgment', 
		'label'       => $t('Media Neutral Citation'),
		'required'    => false,                       
		'display'     => array(
			'default' => array(
		  		'type' => 'text',                       
			),
		),
		'widget'      => array(
			'type'     => 'text',              
			'settings' => array(
				'display_label' => 1,                     
			),
		),
	);
	field_create_instance($instance);


	//Create Judgment date field
	$field = array(
	  'field_name' => 'field_jdate',
	  'label' => $t('Judgment Date'),
	  'cardinality' => 1,
	  'type' => 'date',
	);
	field_create_field($field);

	$instance = array(
		'field_name'  => 'field_jdate',
		'entity_type' => 'node',             
		'bundle'      => 'judgment', 
		'label'       => $t('Judgment Date'),
		'required'    => true, 
		'widget'      => array(
		  'type' => 'date_popup',                     
		  'settings' => array(
			'display_label' => 1,             
			'input_format' => 'j F Y',
			'date_format' => 'd m Y',
			'increment' => 1,
			'year_range' => '-100:+0',                   
		  ),
		),
		
	);
	field_create_instance($instance);
	  

	//Create Presiding judge field
	$field = array(
	  'field_name' => 'field_judge',
	  'label' => $t('Judge'),
	  'cardinality' => -1,
	  'type' => 'text',      
	);
	field_create_field($field);

	$instance = array(
		'field_name'  => 'field_judge',
		'entity_type' => 'node',             
		'bundle'      => 'judgment', 
		'label'       => $t('Judge'),
		'required'    => false,                    
		'widget'      => array(
		  'type'     => 'text',
		  'settings' => array(
			'display_label' => 1, 
			'max_length' => '',                    
		  ),               
		),
	  );
	  field_create_instance($instance);

	  $field = array(
		   'field_name'=>'field_judg_rel_case',
		   'label'=>'Link to related Cases',		 
		   'type'=>'node_reference',
		   'settings'=>array(
		     'referenceable_types'=>array(
		       'related_leg'=>'related_leg'
		   ),
		  ),
		  'cardinality'=>1
		);
		field_create_field($field);
		$instance = array(
		    'field_name'=>'field_judg_rel_case',
		    'label'=>'Link to related Cases',
		    'bundle' => 'judgment',
		    'entity_type' => 'node', 
		    'type'=>'node_reference',
		    'widget'=>array(
		      'type'=>'taxonomy_autocomplete'
		    ),
		);
		field_create_instance($instance);

		$field = array(
		   'field_name'=>'field_judg_rel_leg',
		   'label'=>'Link to related Legislation',		 
		   'type'=>'node_reference',
		   'settings'=>array(
		     'referenceable_types'=>array(
		       'related_leg'=>'related_leg'
		   ),
		  ),
		  'cardinality'=>1
		);
		field_create_field($field);
		$instance = array(
		    'field_name'=>'field_judg_rel_leg',
		    'label'=>'Link to related Legislation',
		    'bundle' => 'judgment',
		    'entity_type' => 'node', 
		    'type'=>'node_reference',
		    'widget'=>array(
		      'type'=>'taxonomy_autocomplete'
		    ),
		);
		field_create_instance($instance);

	 

	  $cnt_code = strtolower(variable_get('site_default_country'));
	   //Create Download field
	  $field = array(
		  'field_name' => 'field_download',
		  'label' => $t('Download'),
		  'cardinality' => -1,
		  'type' => 'file', 
		  /*'settings' => array(
        		'display_default' => 0,
        		'uri_scheme' => $uri,
      		),*/     
	  );
	  field_create_field($field);

	  $directory = $cnt_code."/judgment";
	  $instance = array(
		'field_name'  => 'field_download',
		'entity_type' => 'node',             
		'bundle'      => 'judgment', 
		'label'       => $t('Download'),
		'required'    => false,
		'cardinality' => -1,
		'type' => 'file',                       
		'settings' => array(      
		  'file_directory' => $directory,
		  'file_extensions' => 'txt doc xls pdf ppt pps odt ods odp rtf',       
		  'max_filesize' => '10MB',           
		  ),
		
	  );
	  field_create_instance($instance);	


	  // Create a default vocabulary named "Tags", enabled for the 'article' content type.
		$description = st('Taxonomy');
		$vocabulary = (object) array(
		    'name' => st('Taxonomy'),
		    'description' => $description,
		    'machine_name' => 'judgment_taxonomy',
		);
		taxonomy_vocabulary_save($vocabulary);

		$field = array(
		   'field_name' => 'field_' . $vocabulary->machine_name,
		   'type' => 'taxonomy_term_reference',
		    // Set cardinality to unlimited for tagging.
		   'cardinality' => FIELD_CARDINALITY_UNLIMITED,
		   'settings' => array(
		     'allowed_values' => array(
		       array(
		        'vocabulary' => $vocabulary->machine_name,
		        'parent' => 0,
		       ),
		     ),
		   ),
		);
		field_create_field($field);

		$help = st('Enter a comma-separated list of words to describe your content.');
		$instance = array(
		   'field_name' => 'field_' . $vocabulary->machine_name,
		   'entity_type' => 'node',
		   'label' => 'Taxonomy',
		   'bundle' => 'judgment',
		   'description' => $help,
		   'widget' => array(
		     'type' => 'taxonomy_autocomplete',
		     'weight' => -4,
		    ),
		    'display' => array(
		      'default' => array(
		        'type' => 'taxonomy_term_reference_link',
		        'weight' => 10,
		      ),
		      'teaser' => array(
		        'type' => 'taxonomy_term_reference_link',
		        'weight' => 10,
		    ),
		  ),
		);
		field_create_instance($instance);


		$field = array(
		  'field_name' => 'field_judg_cycle_metadata',
		  'label' => $t('Lifecycle metadata'),
		  'cardinality' => 1,
		  'type' => 'text',
		);
		field_create_field($field);

		$instance = array(
			'field_name'  => 'field_judg_cycle_metadata',
			'entity_type' => 'node',             
			'bundle'      => 'judgment', 
			'label'       => $t('Lifecycle metadata'),
			'required'    => FALSE,                    
			'widget'      => array(
			  'type'     => 'text',
			),			
		);
		field_create_instance($instance);

		$field = array(
		  'field_name' => 'field_judg_aut_metadata',
		  'label' => $t('Authoring metadata'),
		  'cardinality' => 1,
		  'type' => 'text',
		);
		field_create_field($field);

		$instance = array(
			'field_name'  => 'field_judg_aut_metadata',
			'entity_type' => 'node',             
			'bundle'      => 'judgment', 
			'label'       => $t('Authoring metadata'),
			'required'    => FALSE,                    
			'widget'      => array(
			  'type'     => 'text',
			),			
		);
		field_create_instance($instance); 




	}

		
	function judgment_uninstall() {
		// gather all the content while the module was enabled
		$sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
		$result = db_query($sql, array(':type' => 'judgment'));
		$nids = array();
		foreach ($result as $row) {
			$nids[] = $row->nid;
		}
		  
		// delete all the nodes at once
		node_delete_multiple($nids);
		  
		// delete any remaining field instances attached to this content type
		$instances = field_info_instances('node', 'judgment');
		foreach ($instances as $instance_name => $instance) {
			field_delete_instance($instance);
		}
		  
		// delete our content type
		node_type_delete('judgment');
		  
		// purge all field information
		field_purge_batch(1000);
	}
?>

