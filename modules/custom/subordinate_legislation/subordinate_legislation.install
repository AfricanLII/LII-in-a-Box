<?php

/**
	 * @file
	 * Install file for the Judgment Content Type module
	 */
	
	
	
	function subordinate_legislation_install() {
		node_types_rebuild();
		$types = node_type_get_types();	
		
		add_subleg_fields();
		
		// add the body field to the node type
		node_add_body_field($types['subordinate_legislation']);
		// load the instance definition for our content type's body
		$body_instance = field_info_instance('node', 'body', 'subordinate_legislation');
		// configure the body field
		$body_instance['type'] = 'text_summary_or_trimmed';
		$body_instance['label'] = 'Legislation Description';
		$body_instance['display'] = array(
			'default' => array(
				'label' => 'above', 
				'type' => 'text_default',
				'weight' => 0,
			),
			'teaser' => array(
				'label' => 'hidden', 
				'type' => 'text_summary_or_trimmed',
				'weight' => 0,
		),
		);
		$body_instance['widget']['weight'] = 0;
		  


		$country_code = strtolower(variable_get('site_default_country'));		
		variable_set('pathauto_node_subordinate_legislation_pattern', $country_code.'/legislation/si/[node:field_sublegyear]/[node:field_sublegno]');

		//variable_set('auto_nodetitle_node_judgment_pattern','[node:field_casename]'.'('.'[node:field_casenumber]'.')');
		
		  // Don't display date and author information for "Judgments" nodes by default.
		variable_set('node_submitted_subordinate_legislation', FALSE);
		variable_set('node_options_subordinate_legislation', array('status'));
		variable_set('comment_subordinate_legislation', 'COMMENT_NODE_HIDDEN'); 
		
	}// End function install function


	//function will read the array from and create the fields and instances
	function add_subleg_fields() {
		$t = get_t();
		/*$field = array(
			'field_name' => 'field_sublegtitle',
			'label' => $t('Title'),
			'cardinality' => 1,
			'type' => 'text',
			'settings' => array(
				'max_length' => 1000,
			),
		);
		field_create_field($field);
		
		$instance = array(
			'field_name'  => 'field_sublegtitle',
			'entity_type' => 'node',             
			'bundle'      => 'subordinate_legislation', 
			'label'       => $t('Title'),
			'required'    => false,                       
			'display'     => array(
				'default' => array(
					'type' => 'text',                       
				),
			),
			'widget'      => array(
				'type'     => 'text',              
				'settings' => array(
					'display_label' => 1,                     
				),
			),
		);
		field_create_instance($instance); */

		$field = array(
		  'field_name' => 'field_sublegyear',
		  'label' => $t('Year of Subordinate Legislation'),
		  'cardinality' => 1,
		  'type' => 'text',      
		);
		field_create_field($field);

		$instance = array(
			'field_name'  => 'field_sublegyear',
			'entity_type' => 'node',             
			'bundle'      => 'subordinate_legislation', 
			'label'       => $t('Year'),
			'required'    => TRUE,                    
			'widget'      => array(
			  'type'     => 'text',              
			),
		);
		field_create_instance($instance);

		
		$field = array(
		  'field_name' => 'field_sublegno',
		  'label' => $t('Number of SL'),
		  'cardinality' => 1,
		  'type' => 'text',      
		);
		field_create_field($field);

		$instance = array(
			'field_name'  => 'field_sublegno',
			'entity_type' => 'node',             
			'bundle'      => 'subordinate_legislation', 
			'label'       => $t('Number of SL'),
			'required'    => TRUE,                    
			'widget'      => array(
			  'type'     => 'text',              
			),
		);
		field_create_instance($instance);
		

		//Create Legislation date of assent field
		$field = array(
		  'field_name' => 'field_sublegdate',
		  'label' => $t('Date of assent'),
		  'cardinality' => 1,
		  'type' => 'date',
		);
		field_create_field($field);

		$instance = array(
			'field_name'  => 'field_sublegdate',
			'entity_type' => 'node',             
			'bundle'      => 'subordinate_legislation', 
			'label'       => $t('Date of assent'),
			'required'    => true, 
			'widget'      => array(
			  'type' => 'date_popup',                     
			  'settings' => array(
				'display_label' => 1,             
				'input_format' => 'j F Y',
				'date_format' => 'd m Y',
				'increment' => 1,
				'year_range' => '-100:+0',                   
			  ),
			),
			
		);
		field_create_instance($instance);

		//Create Legislation date of assent field
		$field = array(
		  'field_name' => 'field_subpromdate',
		  'label' => $t('Date of promulgation'),
		  'cardinality' => 1,
		  'type' => 'date',
		);
		field_create_field($field);

		$instance = array(
			'field_name'  => 'field_subpromdate',
			'entity_type' => 'node',             
			'bundle'      => 'subordinate_legislation', 
			'label'       => $t('Date of promulgation'),
			'required'    => true, 
			'widget'      => array(
			  'type' => 'date_popup',                     
			  'settings' => array(
				'display_label' => 1,             
				'input_format' => 'j F Y',
				'date_format' => 'd m Y',
				'increment' => 1,
				'year_range' => '-100:+0',                   
			  ),
			),
			
		);
		field_create_instance($instance);

		
		//Create Legislation date of commencement field
		$field = array(
		  'field_name' => 'field_datecomm',
		  'label' => $t('Date of commencement'),
		  'cardinality' => 1,
		  'type' => 'date',
		);
		field_create_field($field);

		$instance = array(
			'field_name'  => 'field_datecomm',
			'entity_type' => 'node',             
			'bundle'      => 'subordinate_legislation', 
			'label'       => $t('Date of commencement'),
			'required'    => true, 
			'widget'      => array(
			  'type' => 'date_popup',                     
			  'settings' => array(
				'display_label' => 1,             
				'input_format' => 'j F Y',
				'date_format' => 'd m Y',
				'increment' => 1,
				'year_range' => '-100:+0',                   
			  ),
			),
			
		);
		field_create_instance($instance);


		$field = array(
		  'field_name' => 'field_subrelatedsis',
		  'label' => $t('Link to Related Sis'),
		  'cardinality' => 1,
		  'type' => 'node_reference',  
		  'settings'=>array(
		     'referenceable_types'=>array(
		       'related_sis'=>'related_sis'
		   ),   
		   ),      
		);
		field_create_field($field);

		$instance = array(
			'field_name'  => 'field_subrelatedsis',
			'entity_type' => 'node',             
			'bundle'      => 'subordinate_legislation', 
			'type' => 'node_reference',
			'label'       => $t('Link to Related Sis'),
			'required'    => false,                    
			'widget'=>array(
		      'type'=>'taxonomy_autocomplete'
		    ),
		);
		field_create_instance($instance);


		$field = array(
		  'field_name' => 'field_subrelatedconsol_act',
		  'label' => $t('Link to Related Consol Act'),
		  'cardinality' => 1,
		  'type' => 'node_reference',  
		  'settings'=>array(
		     'referenceable_types'=>array(
		       'related_leg'=>'related_leg'
		   ), 
		  ),   
		);
		field_create_field($field);

		$instance = array(
			'field_name'  => 'field_subrelatedconsol_act',
			'entity_type' => 'node',             
			'bundle'      => 'subordinate_legislation', 
			'type' => 'node_reference',
			'label'       => $t('Link to Related Consol Act'),
			'required'    => false,                    
			'widget'=>array(
		      'type'=>'taxonomy_autocomplete'
		    ),
		);
		field_create_instance($instance);

		$field = array(
		  'field_name' => 'field_subrelatedleg',
		  'label' => $t('Link to Related Legislation'),
		  'cardinality' => 1,
		  'type' => 'node_reference',    
		  'settings'=>array(
		     'referenceable_types'=>array(
		       'related_leg'=>'related_leg'
		   ),
		  ),      
		);
		field_create_field($field);

		$instance = array(
			'field_name'  => 'field_subrelatedleg',
			'entity_type' => 'node',             
			'bundle'      => 'subordinate_legislation', 
			'type' => 'node_reference',
			'label'       => $t('Link to Related Legislation'),
			'required'    => false,                    
			'widget'=>array(
		      'type'=>'taxonomy_autocomplete'
		    ),
		);
		field_create_instance($instance);
		

	    // Create a default vocabulary named "Tags", enabled for the 'article' content type.
		$description = st('Use tags to group articles on similar topics into categories.');
		$vocabulary = (object) array(
		    'name' => st('Tags'),
		    'description' => $description,
		    'machine_name' => 'subleg_taxonomy',
		);
		taxonomy_vocabulary_save($vocabulary);

		$field = array(
		    'field_name' => 'field_' . $vocabulary->machine_name,
		    'type' => 'taxonomy_term_reference',
		    // Set cardinality to unlimited for tagging.
		    'cardinality' => FIELD_CARDINALITY_UNLIMITED,
		    'settings' => array(
		      'allowed_values' => array(
		        array(
		          'vocabulary' => $vocabulary->machine_name,
		          'parent' => 0,
		        ),
		      ),
		    ),
		);
		field_create_field($field);

		$help = st('Enter a comma-separated list of words to describe your content.');
		$instance = array(
		    'field_name' => 'field_' . $vocabulary->machine_name,
		    'entity_type' => 'node',
		    'label' => 'Taxonomy',
		    'bundle' => 'subordinate_legislation',
		    'description' => $help,
		    'widget' => array(
		      'type' => 'taxonomy_autocomplete',
		      //'weight' => -4,
		    ),
		    'display' => array(
		      'default' => array(
		        'type' => 'taxonomy_term_reference_link',
		        //'weight' => 10,
		      ),
		      'teaser' => array(
		        'type' => 'taxonomy_term_reference_link',
		        //'weight' => 10,
		      ),
		    ),
		  );
		field_create_instance($instance);


		$field = array(
		  'field_name' => 'field_sublegdownload',
		  'label' => $t('Download'),
		  'cardinality' => -1,
		  'type' => 'file',      
	  	);
	  	field_create_field($field);

	  	$cnt_code = strtolower(variable_get('site_default_country'));
	  	$directory = $cnt_code."/subleg-consol";
	  	$instance = array(
			'field_name'  => 'field_sublegdownload',
			'entity_type' => 'node',             
			'bundle'      => 'subordinate_legislation', 
			'label'       => $t('Download of Original File'),
			'required'    => false,
			'cardinality' => -1,
			'type' => 'file',                       
			'settings' => array(      
			  'file_directory' => $directory,
			  'file_extensions' => 'txt doc xls pdf ppt pps odt ods odp rtf',       
			  'max_filesize' => '10MB',           
		  	),
		);
	  	field_create_instance($instance);

	  


	}

?>

